---
interface Props {
    id: string
    img: string
    success: boolean
    flightNumber: number
    details: string | null
    date_utc: Date
}

const { success, img, flightNumber, details, id, date_utc } = Astro.props
const launchStatus = success ? 'Success' : 'Failure'

const formatted_date = new Date(date_utc).toLocaleDateString('en-GB', {day: 'numeric', month: 'short', year: 'numeric'});
//new Date().toLocaleDateString('en-us', { weekday:"long", year:"numeric", month:"short", day:"numeric"})
---

<a href={`/launch/${id}`} class="rounded-lg border shadow-md bg-gray-800 border-gray-700 hover:scale-105 hover:bg-gray-700 hover:border-gray-500 transition flex flex-col">

    <picture class="flex justify-center p-4">
        <img class="mb-5 rounded-lg" src={img} alt={`Patch for launch ${id}`}>
    </picture>

    <header class="p-4 flex-grow">
        <span class:list={["text-xs font-semibold mr-2 px-2.5 py-0.5 rounded", {
            "bg-green-400 text-green-900": success,
            "bg-red-400 text-red-900": !success,
        }]}>
            {launchStatus}
        </span>
        <span class="bg-indigo-100 text-indigo-800 text-sm font-medium me-2 px-2.5 py-0.5 rounded-sm dark:bg-indigo-900 dark:text-indigo-300">
            {formatted_date}
        </span>
        <h2 class="my-2 text-2xl font-bold tracking-tight text-white">
            Flight #{flightNumber}
        </h2>

        <p class="mb-4 font-light text-gray-400">
            {details != null && details?.length > 100 ? `${details.slice(0, 100)}...` : details}
        </p>
    </header>
</a>    